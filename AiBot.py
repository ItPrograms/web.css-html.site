import webbrowser
from gc import callbacks
from io import open_code
from os import access, close
from time import sleep
import random

import telebot
# import pyttsx3
from telebot import types


bot = telebot.TeleBot('7523716138:AAG4yNy6iVNwPQMFlbP7YVl_mHi8f3oQrek')

# def talk(word):
#     engine = pyttsx3.init()
#     engine.say(word)
#     engine.runAndWait()
# talk("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å")

list = '—É—Ä–æ–∫, python, hello'
word = list.split()
words = word.pop(0)
print(word)



@bot.message_handler(commands=['id'])
def start1(message):
    bot.send_message(message.chat.id,message)


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id,'<b>üàØ –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å üàØ</b>\n',parse_mode='html')
    # def talk(word):
    #     engine = pyttsx3.init()
    #     engine.say(word)
    #     engine.runAndWait()
    # talk("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")





@bot.message_handler(content_types=['text'])
def text(message):
    text = message.text.strip().lower()
    if '567u89009' == text:
      # def talk(words):
      #    engine = pyttsx3.init()
      #    engine.say(words)
      #    engine.runAndWait()
      # talk("–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å")
      markup = types.InlineKeyboardMarkup()
      btn = types.InlineKeyboardButton('–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç ?',callback_data='name')
      btn1 = types.InlineKeyboardButton('–ú–µ–Ω—é',callback_data='mena')
      markup.add(btn,btn1)
      bot.send_message(message.chat.id,'–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å üíö',reply_markup=markup)


      @bot.callback_query_handler(func=lambda callback:True)
      def name(callback):
        if callback.data == 'name':
            bot.send_message(message.chat.id,'<b>–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –¥–∞–ª –º–Ω–µ –∏–º—è "Jarvis"</b>',parse_mode='html')
            # talk("–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –¥–∞–ª –º–Ω–µ –∏–º—è 'Jarvis'")
        elif callback.data == 'mena':
             # –ï—Å–ª–∏ —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ –¥–µ–ª–∞—Ç—å —Å edit
             # talk("–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –≤–∞—à–∏ –∫–Ω–æ–ø–∫–∏")
             bot.delete_message(callback.message.chat.id,callback.message.message_id)
             markup = types.InlineKeyboardMarkup()
             btn = types.InlineKeyboardButton('Python üßë‚Äçüíª',callback_data='information')
             btn1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ üëà',callback_data='back')
             btn6 = types.InlineKeyboardButton('–ü–µ—Å–Ω–∏ üéß',callback_data='songs')
             markup.add(btn,btn1,btn6)
             btn2 = types.InlineKeyboardButton('–ó–∞–ø–∏—Å–∏ ‚úç',callback_data='list')
             btn6 = types.InlineKeyboardButton('–ü–æ–∏—Å–∫ YT üñ•',callback_data='min')
             markup.add(btn2,btn6)
             btn1 = types.InlineKeyboardButton('–í–ø–Ω üî•',callback_data='vpn')
             markup.add(btn1)
             btn1 = types.InlineKeyboardButton('Html üåè',callback_data='html')
             markup.add(btn1)
             bot.send_message(message.chat.id,'–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –≤–∞—à–∏ –∫–Ω–æ–ø–∫–∏ üíö',reply_markup=markup)



        elif callback.data == 'vpn':
            webbrowser.open('PlanetVpn')


        elif callback.data == 'random':
            random1 = random.randint(1,90)
            bot.send_message(message.chat.id,random1)

        elif callback.data == 'min':
            bot.send_message(message.chat.id,'–ù–∞–ø—Ä–∏–º–µ—Ä: "–ü–æ–∏—Å–∫:" –∏ –≤–∞—à —Ç–µ–∫—Å—Ç')


        elif callback.data == 'list':
            bot.answer_callback_query(callback_query_id=callback.id,show_alert=True,text='–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç')

        elif callback.data == 'back':
            bot.delete_message(callback.message.chat.id,callback.message.message_id)
            markup = types.InlineKeyboardMarkup()
            btn = types.InlineKeyboardButton('–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç ?',callback_data='name')
            btn1 = types.InlineKeyboardButton('–ú–µ–Ω—é',callback_data='mena')
            markup.add(btn,btn1)
            bot.send_message(message.chat.id,'–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å üíö',reply_markup=markup)

        elif callback.data == 'songs':
            webbrowser.open('https://vk.com/audio638350475_456239062')

        elif callback.data == 'html':
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–û—Å–Ω–æ–≤—ã 10–º–∏–Ω üê£',url='https://www.youtube.com/watch?v=SKRydSA2bYA')
            btn2 = types.InlineKeyboardButton('Html üßë‚Äçüíª',url='https://www.youtube.com/watch?v=oVqyRw3l3iI')
            btn3 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å ‚ùå',callback_data='remove')
            markup.add(btn1,btn2,btn3)
            bot.send_message(message.chat.id,'–í—Å—è –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è Html üíö',reply_markup=markup)

        elif callback.data == 'information':
             markup = types.InlineKeyboardMarkup()
             btn = types.InlineKeyboardButton('–í–∏–¥–µ–æ OpenCv‚úà',url='https://www.youtube.com/watch?v=S-kg8eVPXRQ')
             btn1 = types.InlineKeyboardButton('–í–∏–¥–µ–æ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ü–∫üíª',url='https://www.youtube.com/results?search_query=–ø—Ä–æ—Å—Ç–æ–π+—É—Ä–æ–∫+pyautogui')
             markup.add(btn,btn1)
             btn2 = types.InlineKeyboardButton('–í–∏–¥–µ–æ Pythonü•≥',url='https://www.youtube.com/playlist?list=PLDyJYA6aTY1lPWXBPk0gw6gR8fEtPDGKa')
             btn3 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å ‚ùå',callback_data='remove')
             markup.add(btn2,btn3)
             bot.send_message(message.chat.id,'üëâ–í—Å–µ –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –∫–Ω–æ–ø–∫–∏ üëà',reply_markup=markup)
        elif callback.data == 'affect':
            bot.answer_callback_query(callback_query_id=callback.id, show_alert=True, text='‚ù§Ô∏è Error ‚ù§Ô∏è')
        elif callback.data == 'remove':
            bot.delete_message(callback.message.chat.id,callback.message.message_id)

    elif '–¢–µ–∫—Å—Ç' in message.text:
        bot.delete_message(message.chat.id,message.message_id)
        res = message.text.strip()
        word = res.split()
        word.pop(0)
        result = ' '.join(word)
        bot.send_message(message.chat.id,result)
    elif '–ü–æ–∏—Å–∫' in message.text:
        bot.delete_message(message.chat.id,message.message_id)
        res = message.text.strip()
        word = res.split()
        word.pop(0)
        result = '+'.join(word)
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å',url=f'https://www.youtube.com/results?search_query={result}')
        btn1 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å ‚ùå',callback_data='remove')
        markup.add(btn,btn1)
        bot.send_message(message.chat.id,'–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ ‚ò∫', reply_markup=markup)




    # else:
    #       markup = types.InlineKeyboardMarkup()
    #       btn = types.InlineKeyboardButton('üëâ–ù–∞–∂–º–∏üëà',callback_data='affect')
    #       markup.add(btn)
    #       bot.delete_message(message.chat.id,message.message_id) and bot.send_message(message.chat.id,'üí¨ –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–∞–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π üí¨',reply_markup=markup)
    #       bot.send_message(message.chat.id,'ü•∂')
    #       def talk(words):
    #          engine = pyttsx3.init()
    #          engine.say(words)
    #          engine.runAndWait()
    #       talk("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–∞–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")





 # bot.answer_callback_query(callback_query_id=callback.id, show_alert=False,text='Hello')


bot.polling(none_stop=True)
